import {
  EndpointsInputConfig,
  EndpointsResolvedConfig,
  RegionInputConfig,
  RegionResolvedConfig,
} from "@aws-sdk/config-resolver";
import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@aws-sdk/middleware-retry";
import {
  AwsAuthInputConfig,
  AwsAuthResolvedConfig,
} from "@aws-sdk/middleware-signing";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
import {
  Client as __Client,
  DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@aws-sdk/smithy-client";
import {
  BodyLengthCalculator as __BodyLengthCalculator,
  Credentials as __Credentials,
  Decoder as __Decoder,
  Encoder as __Encoder,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  RegionInfoProvider,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@aws-sdk/types";
import {
  DeleteLexiconCommandInput,
  DeleteLexiconCommandOutput,
} from "./commands/DeleteLexiconCommand";
import {
  DescribeVoicesCommandInput,
  DescribeVoicesCommandOutput,
} from "./commands/DescribeVoicesCommand";
import {
  GetLexiconCommandInput,
  GetLexiconCommandOutput,
} from "./commands/GetLexiconCommand";
import {
  GetSpeechSynthesisTaskCommandInput,
  GetSpeechSynthesisTaskCommandOutput,
} from "./commands/GetSpeechSynthesisTaskCommand";
import {
  ListLexiconsCommandInput,
  ListLexiconsCommandOutput,
} from "./commands/ListLexiconsCommand";
import {
  ListSpeechSynthesisTasksCommandInput,
  ListSpeechSynthesisTasksCommandOutput,
} from "./commands/ListSpeechSynthesisTasksCommand";
import {
  PutLexiconCommandInput,
  PutLexiconCommandOutput,
} from "./commands/PutLexiconCommand";
import {
  StartSpeechSynthesisTaskCommandInput,
  StartSpeechSynthesisTaskCommandOutput,
} from "./commands/StartSpeechSynthesisTaskCommand";
import {
  SynthesizeSpeechCommandInput,
  SynthesizeSpeechCommandOutput,
} from "./commands/SynthesizeSpeechCommand";
export declare type ServiceInputTypes =
  | DeleteLexiconCommandInput
  | DescribeVoicesCommandInput
  | GetLexiconCommandInput
  | GetSpeechSynthesisTaskCommandInput
  | ListLexiconsCommandInput
  | ListSpeechSynthesisTasksCommandInput
  | PutLexiconCommandInput
  | StartSpeechSynthesisTaskCommandInput
  | SynthesizeSpeechCommandInput;
export declare type ServiceOutputTypes =
  | DeleteLexiconCommandOutput
  | DescribeVoicesCommandOutput
  | GetLexiconCommandOutput
  | GetSpeechSynthesisTaskCommandOutput
  | ListLexiconsCommandOutput
  | ListSpeechSynthesisTasksCommandOutput
  | PutLexiconCommandOutput
  | StartSpeechSynthesisTaskCommandOutput
  | SynthesizeSpeechCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandler;
  sha256?: __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  serviceId?: string;
  region?: string | __Provider<string>;
  credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
  regionInfoProvider?: RegionInfoProvider;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
}
declare type PollyClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  RegionInputConfig &
  EndpointsInputConfig &
  RetryInputConfig &
  HostHeaderInputConfig &
  AwsAuthInputConfig &
  UserAgentInputConfig;
export interface PollyClientConfig extends PollyClientConfigType {}
declare type PollyClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RegionResolvedConfig &
    EndpointsResolvedConfig &
    RetryResolvedConfig &
    HostHeaderResolvedConfig &
    AwsAuthResolvedConfig &
    UserAgentResolvedConfig;
export interface PollyClientResolvedConfig
  extends PollyClientResolvedConfigType {}
export declare class PollyClient extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  PollyClientResolvedConfig
> {
  readonly config: PollyClientResolvedConfig;
  constructor(configuration: PollyClientConfig);
  destroy(): void;
}
export {};
